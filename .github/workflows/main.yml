name: Build and Push Custom FreshRSS Image

# 允许手动触发此工作流
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout patch repository
        # 1. 先拉取包含我们补丁的仓库
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }} # 这是你自己的 freshrss-patch 仓库
          path: patch

      - name: Checkout FreshRSS official repository
        # 2. 再拉取 FreshRSS 官方仓库的最新代码
        uses: actions/checkout@v3
        with:
          repository: FreshRSS/FreshRSS
          path: freshrss-source

      - name: Apply patch
        # 3. 将我们的补丁文件覆盖到官方代码中
        #    注意：这里的路径需要根据 FreshRSS 仓库的真实结构进行调整
        run: |
          echo "Applying custom greader.php..."
          cp patch/greader.php freshrss-source/p/api/greader.php
          echo "Patch applied."

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        # 4. 登录 Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        # 5. 构建并推送镜像
        uses: docker/build-push-action@v4
        with:
          context: ./freshrss-source # 指定 Dockerfile 的上下文路径
          push: true
          tags: aloklok/freshrss-custom:latest  
